#include<stdio.h>
#include "graphics.h"
#include<stdlib.h>
#include<windows.h>
int maxx=600,maxy=400,radius=8,ra1,t1=-1,time=70,m1=58,l1=116,xm1=100,ym1=170,xl1=100,yl1=170,h=0,xgt1=200,ygt1=200,gt1=58,point=8,na=0;
int fx,fy;
char s[1000];
FILE *f;
void menu();
struct identity
{
	char name[100];
	int score;
} ;
struct identity v,b[1000];
struct coordinate
{
	int x1,y1,x2,y2;
};
void up(struct coordinate *t)
{
	t->y2=t->y1;
	t->x2=t->x1;
	t->y1=t->y1-15;
}
void down(struct coordinate *t)
{
	t->y2=t->y1;
	t->x2=t->x1;
	t->y1=t->y1+15;
}
void right(struct coordinate *t)
{
	t->x2=t->x1;
	t->y2=t->y1;
	t->x1=t->x1+15;
}
void left(struct coordinate *t)
{
	t->x2=t->x1;
	t->y2=t->y1;
	t->x1=t->x1-15;
}
void (*snake)();
void snake_maze();
void (*p)(struct coordinate *t);
void circleb()
{
	radius=15;
	fx=rand()%(maxx-60);
	fy=rand()%(maxy-60);
	if(fx<=45||fx>=555||fy<=45||fy>=305)
		circleb();
	setfillstyle(SOLID_FILL,BLACK);
	circle(fx,fy,radius);
	fillellipse(fx,fy,radius,radius);
}
void circlen()
{
	radius=8;
	fx=rand()%(maxx-60);
	fy=rand()%(maxy-60);
	if(fx<=45||fx>=555||fy<=45||fy>=305)
		circlen();
	setfillstyle(SOLID_FILL,BLACK);
	circle(fx,fy,radius);
	fillellipse(fx,fy,radius,radius);
}
void instructions()
{
	char c;
	setfillstyle(SOLID_FILL,BLACK);
	bar(0,0,maxx,maxy);
	outtextxy(20,50,"Use up,down,left,right to control the snake.Eat the");
	outtextxy(20,75,"food without colliding with any obstacles and eat bonus");
	outtextxy(20,100,"quickly to score extra points.Use enter to select &");
	outtextxy(20,125,"backspace to go back to previous menu.");
	for(;;)
	{
		if(kbhit())
		{
			c=getch();
			if(c=='\b')
				break;
		}
	}
	setfillstyle(SOLID_FILL,BLACK);
	bar(0,0,maxx,maxy);
	menu();
}
void highscores();
void enter_name()
{
	char s[1000],c,t2[1000],t3[1000];
	int t, i,j,k,l;
	for(i=1;i<=9;i++)
	{
		for(j=1;j<=9;j++)
		{
			if(b[j].score>b[j-1].score)
			{
				t=b[j].score;
				b[j].score=b[j-1].score;
				b[j-1].score=t;
			}
		}
	}
	for(i=0;i<=9;i++)
	{
		if(v.score>=b[i].score)
			break;
	}
	k=i;
	if(i<=9)
	{
		outtextxy(50,100,"Enter Your Name: ");
		for(j=i;j<=9;j++)
		{
			t=b[j].score;
			t1=b[j+1].score;
			b[j].score=v.score;
			v.score=t;
		}
		j=300;
		l=0;
		settextstyle(9, HORIZ_DIR,1);
		for(;;)
		{
			c=getch();
			if(c=='\r')
				break;
			else if(c=='\b')
			{
				j-=20;
				l--;
				if(l<=0)
				{
					j=300;
					l=0;
				}
				setfillstyle(SOLID_FILL,BLACK);
				bar(j,40,j+50,40);
				setfillstyle(SOLID_FILL,BLACK);
				v.name[l]=' ';
				sprintf(s,"%c",v.name[l]);
				outtextxy(j,100,s);
			}
			else if(c==72||c==80||c==77||c==75)
			{
				l--;
				j-=20;
			}
			else
			{
				v.name[l]=c;
				sprintf(s,"%c",v.name[l]);
				outtextxy(j,100,s);
				j+=20;
				l++;
			}
		}
		v.name[l]='\0';
		delay(1000);
		for(j=i;j<=9;j++)
		{
			strcpy(t2,b[j].name);
			strcpy(t3,b[j+1].name);
			strcpy(b[j].name,v.name);
			strcpy(v.name,t2);
		}
	}
	f=fopen("High_Score.txt","w");
	for(i=0;i<=9;i++)
	{
		fprintf(f,"%s %d\n",b[i].name,b[i].score);
		if(b[i].score==-1)
			continue;		
	}
	fclose(f);
	setfillstyle(SOLID_FILL,BLACK);
	bar(0,0,maxx,maxy);
	menu();
}
void highscores()
{
	char c,z[1000],z1[1000];
	int i,j=125,number;
	setfillstyle(SOLID_FILL,BLACK);
	bar(0,0,maxx,maxy);
	outtextxy(200,40,"LEADERBOARD");
	line(0,70,600,70);
	outtextxy(50,85,"RANK");
	line(150,70,150,400);
	outtextxy(220,85,"NAME");
	line(380,70,380,400);
	line(0,115,600,115);
	outtextxy(450,85,"SCORE");
	outtextxy(60,125,"1: ");
	outtextxy(60,150,"2: ");
	outtextxy(60,175,"3: ");
	outtextxy(60,200,"4: ");
	outtextxy(60,225,"5: ");
	outtextxy(60,250,"6: ");
	outtextxy(60,275,"7: ");
	outtextxy(60,300,"8: ");
	outtextxy(60,325,"9: ");
	outtextxy(50,350,"10: ");
	f=fopen("High_Score.txt","r");
	for(i=0;i<=9;i++)
	{
		fscanf(f,"%s%d",b[i].name,&b[i].score);
		if(b[i].score>=0)
		{
			sprintf(z,"%s",b[i].name);
			outtextxy(220,j,z);
			sprintf(z,"%d",b[i].score);
			outtextxy(450,j,z);
			j+=25;
		}
	}
	fclose(f);
	for(;;)
	{
		if(kbhit())
		{
			c=getch();
			if(c=='\b')
				break;
		}
	}
	setfillstyle(SOLID_FILL,BLACK);
	bar(0,0,maxx,maxy);
	menu();
}
void exit()
{
	h=1;
}
void (*l)();
void level_easy()
{
	time=100;
	point=6;
}
void level_normal()
{
	time=75;
	point=8;
}
void level_hard()
{
	time=50;
	point=10;
}
void menu();
void level()
{
	char c;
	setfillstyle(SOLID_FILL,BLACK);
	bar(0,0,maxx,maxy);
	outtextxy(200,58,"EASY");
	outtextxy(200,116,"NORMAL");
	outtextxy(200,174,"HARD");
	l=level_normal;
	setfillstyle(SOLID_FILL,WHITE);
	bar(xl1,l1,yl1,l1+20);
	for(;;)
	{
			c =getch( );
			if(c=='\r')
			{
				Beep(300,200);
				l();
			}	
			if(c=='\b')
				break;
			else if(c==72)
			{
				if(l==level_easy)
				{
					setfillstyle(SOLID_FILL,BLACK);
					bar(xl1,l1,yl1,l1+20);
					l1=58;
					setfillstyle(SOLID_FILL,WHITE);
					bar(xl1,l1,yl1,l1+20);
					continue;
				}
				else if(l==level_normal)
				{
					
					setfillstyle(SOLID_FILL,BLACK);
					bar(xl1,l1,yl1,l1+20);
					l1=58;
					l=level_easy;
					setfillstyle(SOLID_FILL,WHITE);
					bar(xl1,l1,yl1,l1+20);
				}
				else if(l==level_hard)
				{
					setfillstyle(SOLID_FILL,BLACK);
					bar(xl1,l1,yl1,l1+20);
					l=level_normal;
					l1=116;
					setfillstyle(SOLID_FILL,WHITE);
					bar(xl1,l1,yl1,l1+20);
				}
			}
			else if(c==80)
			{
				if(l==level_easy)
				{
					setfillstyle(SOLID_FILL,BLACK);
					bar(xl1,l1,yl1,l1+20);
					l=level_normal;
					l1=116;
					setfillstyle(SOLID_FILL,WHITE);
					bar(xl1,l1,yl1,l1+20);
				}
				else if(l==level_normal)
				{
					setfillstyle(SOLID_FILL,BLACK);
					bar(xl1,l1,yl1,l1+20);
					l1=174;
					l=level_hard;
					setfillstyle(SOLID_FILL,WHITE);
					bar(xl1,l1,yl1,l1+20);
				}
				else if(l==level_hard)
				{
					setfillstyle(SOLID_FILL,BLACK);
					bar(xl1,l1,yl1,l1+20);
					l1=174;
					setfillstyle(SOLID_FILL,WHITE);
					bar(xl1,l1,yl1,l1+20);
					continue;
				}
			}
	}
	setfillstyle(SOLID_FILL,BLACK);
	bar(0,0,maxx,maxy);
	menu();
}
void (*m)();
void menu()
{
	char c;
	snake=snake_maze;
	m=snake;
	setfillstyle(SOLID_FILL,BLACK);
	bar(0,0,maxx,maxy);
	settextstyle(9, HORIZ_DIR,1);
	outtextxy(200,58,"PLAY");
	outtextxy(200,116,"LEVEL");
	outtextxy(200,174,"INSTRUCTIONS");
	outtextxy(200,232,"HIGH  SCORES");
	outtextxy(200,290,"EXIT");
	setfillstyle(SOLID_FILL,WHITE);
	m1=58;
	bar(xm1,m1,ym1,m1+20);
		for(;;)
		{
			c =getch( );
			if(c=='\r')
			{
				Beep(300,200);
				m();
			}
			if(h==1)
				break;
			else if(c==72)
			{
				if(m==snake)
				{
					setfillstyle(SOLID_FILL,BLACK);
					bar(xm1,m1,ym1,m1+20);
					m1=58;
					setfillstyle(SOLID_FILL,WHITE);
					bar(xm1,m1,ym1,m1+20);
					continue;
				}
				else if(m==level)
				{
					setfillstyle(SOLID_FILL,BLACK);
					bar(xm1,m1,ym1,m1+20);
					m1=58;
					m=snake;
					setfillstyle(SOLID_FILL,WHITE);
					bar(xm1,m1,ym1,m1+20);
				}
				else if(m==instructions)
				{
					setfillstyle(SOLID_FILL,BLACK);
					bar(xm1,m1,ym1,m1+20);
					m1=116;
					m=level;
					setfillstyle(SOLID_FILL,WHITE);
					bar(xm1,m1,ym1,m1+20);
				}
				else if(m==highscores)
				{
					setfillstyle(SOLID_FILL,BLACK);
					bar(xm1,m1,ym1,m1+20);
					m1=174;
					m=instructions;
					setfillstyle(SOLID_FILL,WHITE);
					bar(xm1,m1,ym1,m1+20);
				}
				else if(m==exit)
				{
					setfillstyle(SOLID_FILL,BLACK);
					bar(xm1,m1,ym1,m1+20);
					m1=232;
					m=highscores;
					setfillstyle(SOLID_FILL,WHITE);
					bar(xm1,m1,ym1,m1+20);
				}
			}
			else if(c==80)
			{
				if(m==snake)
				{
					setfillstyle(SOLID_FILL,BLACK);
					bar(xm1,m1,ym1,m1+20);
					m1=116;
					m=level;
					setfillstyle(SOLID_FILL,WHITE);
					bar(xm1,m1,ym1,m1+20);
				}
				else if(m==level)
				{
					setfillstyle(SOLID_FILL,BLACK);
					bar(xm1,m1,ym1,m1+20);
					m1=174;
					m=instructions;
					setfillstyle(SOLID_FILL,WHITE);
					bar(xm1,m1,ym1,m1+20);
				}
				else if(m==instructions)
				{
					setfillstyle(SOLID_FILL,BLACK);
					bar(xm1,m1,ym1,m1+20);
					m1=232;
					m=highscores;
					setfillstyle(SOLID_FILL,WHITE);
					bar(xm1,m1,ym1,m1+20);
				}
				else if(m==highscores)
				{
					setfillstyle(SOLID_FILL,BLACK);
					bar(xm1,m1,ym1,m1+20);
					m1=290;
					m=exit;
					setfillstyle(SOLID_FILL,WHITE);
					bar(xm1,m1,ym1,m1+20);
				}
				else if(m==exit)
				{
					setfillstyle(SOLID_FILL,BLACK);
					bar(xm1,m1,ym1,m1+20);
					m1=290;
					m=exit;
					setfillstyle(SOLID_FILL,WHITE);
					bar(xm1,m1,ym1,m1+20);
				}
		}
	}
}
void snake_maze()
{
	setfillstyle(SOLID_FILL,WHITE);
	bar(30,30,maxx-30,maxy-80);
	bar(0,350,600,400);
	outtextxy(25,370,"Score: ");
	v.score=0;
	int count,i,j,flag,f,n;
	count=4;
	flag=0;
	f=0;
	n=point;
	char c;
	struct coordinate a[1000],t[1000];
	a[0].x1=150;
	a[0].y1=200;
	a[0].x2=135;
	a[0].y2=200;
	setcolor(BLACK);
	line(a[0].x2,a[0].y2,a[0].x1,a[0].y1);
	for(i=1;i<count;i++)
	{
		a[i].x2=a[i-1].x2-15;
		a[i].x1=a[i-1].x1-15;
		a[i].y2=a[i-1].y2;
		a[i].y1=a[i-1].y1;
		setcolor(BLACK);
		line(a[i].x2,a[i].y2,a[i].x1,a[i].y1);
	}
	circlen();
	p=right;
	for(;;)
	{
		for(;;)
		{
			if(a[0].x1>=570||a[0].x1<=30||a[0].y1>=320||a[0].y1<=30)
			{
				flag=1;
				break;
			}
			setfillstyle(SOLID_FILL,BLACK);
			circle(fx,fy,radius);
			fillellipse(fx,fy,radius,radius);
			if((a[0].x1>=fx-radius && a[0].x1<=fx+radius) && (a[0].y1>=fy-radius && a[0].y1<=fy+radius))
			{
				setfillstyle(SOLID_FILL,WHITE);
				circle(fx,fy,radius);
				fillellipse(fx,fy,radius,radius);
				count++;
				f++;
				v.score+=n;
				if(v.score>0 && f==5)
				{
					f=0;
					t1=22;
					n=20;
					circleb();
				}
				else
				{
					n=point;
					t1=-1;
					circlen();
				}
			}
			setfillstyle(SOLID_FILL,BLACK);
			circle(fx,fy,radius);
			fillellipse(fx,fy,radius,radius);
			if(t1==0)
			{
				setfillstyle(SOLID_FILL,WHITE);
				circle(fx,fy,radius);
				fillellipse(fx,fy,radius,radius);
				circlen();
				n=point;
				t1=-1;
			}
			if(t1>0)
				t1--;
			settextstyle(9, HORIZ_DIR,1);
			sprintf(s,"%.4d",v.score);
			outtextxy(100,370,s);
			for(i=1;i<count;i++)
			{
				if(a[0].x1==a[i].x1&&a[0].y1==a[i].y1)
				{
					flag=1;
					break;
				}
			}
			if(flag==1)
				break;
			if(kbhit())
				break;
			t[0]=a[0];
			for(i=1;i<count;i++)
			{
				t[i]=a[i];
				a[i]=t[i-1];
				setcolor(BLACK);
				line(a[i].x2,a[i].y2,a[i].x1,a[i].y1);
			}
			a[i]=t[i-1];
			p(&a[0]);
			line(a[0].x2,a[0].y2,a[0].x1,a[0].y1);
			setcolor(WHITE);
			line(a[i].x2,a[i].y2,a[i].x1,a[i].y1);
			delay(time);
		}
		if(flag==1)
			break;
		getch();
		c=getch();
		if(c==72)
		{
			if(p==up||p==down)
				continue;
			else
				p=up;
		}
		else if(c==80)
		{
			if(p==up||p==down)
				continue;
			else
				p=down;
		}
		else if(c==77)
		{
			if(p==right||p==left)
				continue;
			else
				p=right;
		}
		else if(c==75)
		{
			if(p==right||p==left)
				continue;
			else
				p=left;
		}
		if(c=='\b')
		{
			na=1;
			break;
		}
	}
	if(na==1)
	{
		na=0;
		setfillstyle(SOLID_FILL,BLACK);
		bar(0,0,maxx,maxy);
		menu();	
	}
	else
	{
		settextstyle(9, HORIZ_DIR,3);
		Beep(300,200);
		outtextxy(200,200,"Game Over");
		delay(2000);
		setfillstyle(SOLID_FILL,WHITE);
		setcolor(WHITE);
		circle(fx,fy,radius);
		fillellipse(fx,fy,radius,radius);
		setfillstyle(SOLID_FILL,BLACK);
		bar(0,0,maxx,maxy);
		enter_name();
	}
}
int main()
{
	initwindow(maxx,maxy,"game");
	int i;
	for(i=0;i<=9;i++)
	{
		b[i].score=-1;
	}
	menu();
	while(!kbhit())
		delay(100);
	system("pause");
	return 0;
}